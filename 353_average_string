# You are given a string of numbers between 0-9. Find the average of
# these numbers and return it as a floored whole number (ie: no decimal
# places) written out as a string. Eg:
# "zero nine five two" -> "four"
# If the string is empty or includes a number greater than 9, return "n/a"

def average_string(s):
    num = {'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,
           'six': 6, 'seven': 7, 'eight': 8, 'nine': 9, 'zero': 0}
    try:
        rez = sum(num[i] for i in s.split())//len(s.split())
        return list(num.keys())[list(num.values()).index(rez)]
    except:
        return 'n/a'




print(average_string("zero nine five two"))         # "four"
print(average_string("four six two three"))         # "three"
print(average_string("one two three four five"))    # "three"
print(average_string("five four"))                  # "four"
print(average_string("zero zero zero zero zero"))   # "zero"
print(average_string("one one eight one"))          # "two"
print(average_string("one"))                        # "one"
print(average_string(""))                           # "n/a"
print(average_string("ten"))                        # "n/a"
print(average_string("pippi"))                      # "n/a"
