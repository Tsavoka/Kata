# Backwards Read Primes are primes that when read backwards in base 10
# (from right to left) are a different prime. (This rules out primes
# which are palindromes.)
# Find all Backwards Read Primes between two positive given numbers
# (both inclusive), the second one always being greater than or equal to
# the first one. The resulting array or the resulting string will be
# ordered following the natural order of the prime numbers.

from math import sqrt


def backwards_prime(start, stop):
    result = []
    for num in range(start, stop+1):
        if all(num % i for i in range(2, int(sqrt(num))+1)):
            result.append(num)
    for num in set(result):
        if num == int(str(num)[::-1]):
            result.remove(num)
    return [num for num in result if all(int(str(num)[::-1]) % i for i in range(2, int(sqrt(int(str(num)[::-1])))+1))]




print(backwards_prime(7000, 7100))      # [7027, 7043, 7057]  
print(backwards_prime(400, 503))        # []
print(backwards_prime(70000, 70245))    # [70001, 70009, 70061, 70079, 70121, 70141, 70163, 70241]
