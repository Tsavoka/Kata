# Given a two-dimensional array representation of a glass of mixed liquids, 
# sort the array such that the liquids appear in the glass based on their 
# density. (Lower density floats to the top) The width of the glass will 
# not change from top to bottom.
# ======================
# |   Density Chart    |
# ======================
# | Honey   | H | 1.36 |
# | Water   | W | 1.00 |
# | Alcohol | A | 0.87 |
# | Oil     | O | 0.80 |
# ----------------------
# {                             {
#   { 'H', 'H', 'W', 'O' },        { 'O','O','O','O' },
#   { 'W', 'W', 'O', 'W' },  =>    { 'W','W','W','W' },
#   { 'H', 'H', 'O', 'O' }         { 'H','H','H','H' }
# }                             }
# The glass representation may be larger or smaller. If a liquid doesn't 
# fill a row, it floats to the top and to the left.


def separate_liquids(glass):
    if not glass:
        return []
    size = len(glass[0])
    glass = [i for k in glass for i in k]
    rez = ['O']*glass.count('O') + ['A']*glass.count('A') + ['W']*glass.count('W') + ['H']*glass.count('H')
    return [rez[i:i + size] for i in range(0, len(rez), size)]




print(separate_liquids([['H', 'H', 'W', 'O'],['W','W','O','W'],['H','H','O','O']]))
# [['O','O','O','O'],['W','W','W','W'],['H','H','H','H']]
print(separate_liquids([['A','A','O','H'],['A', 'H', 'W', 'O'],['W','W','A','W'],['H','H','O','O']]))
# [['O','O','O','O'],['A','A','A','A'],['W','W','W','W'],['H','H','H','H']]
print(separate_liquids([['A','H','W','O']]))
# [['O','A','W','H']]
print(separate_liquids([['A'],['H'],['W'],['O']]))
# [['O'],['A'],['W'],['H']]
print(separate_liquids([]))
# []
