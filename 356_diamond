# You need to return a string that looks like a diamond shape when printed
# on the screen, using asterisk (*) characters. Trailing spaces should be
# removed, and every line must be terminated with a newline character (\n).
# Return null/nil/None/... if the input is an even number or negative, as
# it is not possible to print a diamond of even or negative size.
# Examples
# A size 3 diamond:
#  *
# ***
#  *

def diamond(n):
    if n%2 == 0 or n < 0:
        return None
    rez = []
    count = n
    while count > 0:
        rez.append(('*'*count).center(n).rstrip() + '\n')
        count -= 2
    return ''.join(rez[::-1] + rez[1:])




print(diamond(1))   # "*\n"
print(diamond(2))   # None
print(diamond(5))   # "  *\n ***\n*****\n ***\n  *\n"
print(diamond(0))   # None
print(diamond(-3))  # None
