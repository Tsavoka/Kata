# Create a function that takes a positive integer and returns the next
# bigger number that can be formed by rearranging its digits. For example:
# 12 ==> 21
# 513 ==> 531
# 2017 ==> 2071
# nextBigger(num: 12)   // returns 21
# nextBigger(num: 513)  // returns 531
# nextBigger(num: 2017) // returns 2071
# If the digits can't be rearranged to form a bigger number, return -1:
# 9 ==> -1
# 111 ==> -1
# 531 ==> -1

def next_bigger(n):
    n = list(str(n))
    i = len(n) - 2
    while i >= 0 and n[i] >= n[i+1]:
        print(n[i], n[i+1])
        i -= 1
    if i < 0:
        return -1
    j = len(n) - 1
    while n[j] <= n[i]:
        j -= 1
    n[i], n[j] = n[j], n[i]
    n[i+1:] = sorted(n[i+1:])
    return int(''.join(n))




print(next_bigger(  12))                    # 21
print(next_bigger(  21))                    # -1
print(next_bigger( 513))                    # 531
print(next_bigger(2017))                    # 2071
print(next_bigger( 414))                    # 441
print(next_bigger( 144))                    # 414
print(next_bigger(19000000))                # 90000001 
print(next_bigger(1234567890))              # 1234567908
print(next_bigger(3661))                    # 6136
print(next_bigger(2877555444322111))        # 3111222444555778
