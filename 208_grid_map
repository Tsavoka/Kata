# Write a function which maps a function over the lists in a list:
# def grid_map(inp, op)
    # which performs op(element) for all elements of inp
# Example 1:
# x = [[1,2,3],[4,5,6]]
# grid_map(x, lambda x: x + 1)
# -- returns [[2,3,4],[5,6,7]]
# grid_map(x, lambda x: x ** 2)
# -- returns [[1,4,9],[16,25,36]]
# Example 2
# x = [['h', 'E', 'l', 'l', 'O'], ['w', 'O', 'r', 'L', 'd']]
# grid_map(x, lambda x: x.upper())
# -- returns [['H', 'E', 'L', 'L', 'O'], ['W', 'O', 'R', 'L', 'D']]

def grid_map(inp, op):
    return list(map(lambda inp: list(map(op, inp)), inp))

    


num_grid = [[1,2,3,4], [5,6,7,8,9], [0,2,4]]
char_grid = [['h', 'E', 'l', 'l', 'O'], ['w', 'O', 'r', 'L', 'd']]
    
print(grid_map(num_grid, lambda x: x + 1)) 
# [[2,3,4,5], [6,7,8,9,10], [1,3,5]])
print(grid_map(num_grid, lambda x: x * 2)) 
# [[2,4,6,8], [10,12,14,16,18], [0,4,8]])
print(grid_map(num_grid, lambda x: x ** 2)) 
# [[1,4,9,16],[25,36,49,64,81],[0,4,16]])
print(grid_map(char_grid, lambda x: x.upper())) 
# [['H', 'E', 'L', 'L', 'O'], ['W', 'O', 'R', 'L', 'D']])
print(grid_map(char_grid, lambda x: x.lower())) 
# [['h', 'e', 'l', 'l', 'o'], ['w', 'o', 'r', 'l', 'd']])
