# Consider the word "abode". We can see that the letter a is in position
# 1 and b is in position 2. In the alphabet, a and b are also in positions
# 1 and 2. Notice also that d and e in abode occupy the positions they
# would occupy in the alphabet, which are positions 4 and 5.
# Given an array of words, return an array of the number of letters that
# occupy their positions in the alphabet for each word. For example,
# solve(["abode","ABc","xyzD"]) = [4, 3, 1]
# Input will consist of alphabet characters, both uppercase and lowercase.
# No spaces.

from string import ascii_lowercase


def solve(arr):
    return list((sum(ascii_lowercase[i]==k for i,k in enumerate(word.lower()[:26]))) for word in arr)




print(solve(["abode","ABc","xyzD"]))                        # [4,3,1]
print(solve(["abide","ABc","xyz"]))                         # [4,3,0]
print(solve(["IAMDEFANDJKL","thedefgh","xyzDEFghijabc"]))   # [6,5,7]
print(solve(["encode","abc","xyzD","ABmD"]))                # [1,3,1,3]
