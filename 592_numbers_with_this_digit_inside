# You have to search all numbers from inclusive 1 to
# inclusive a given number x, that have the given digit
# d in it.
# The value of d will always be 0 - 9.
# The value of x will always be greater than 0.
# You have to return as an array
#  the count of these numbers,
#  their sum
#  and their product.
# For example:
# x = 11
# d = 1
# ->
# Numbers: 1, 10, 11
# Return: [3, 22, 110]
# If there are no numbers, which include the digit, return
# [0,0,0].

import math

def numbers_with_digit_inside(x, d):
    rez = [i for i in range(1,x+1) if str(d) in str(i)]
    return [0,0,0] if not rez else [len(rez), sum(rez), math.prod(rez)]
    



print(numbers_with_digit_inside(5, 6))  # [0, 0, 0]
print(numbers_with_digit_inside(1, 0))  # [0, 0, 0]
print(numbers_with_digit_inside(7, 6))  # [1, 6, 6]
print(numbers_with_digit_inside(11, 1)) # [3, 22, 110]
print(numbers_with_digit_inside(20, 0)) # [2, 30, 200]
print(numbers_with_digit_inside(44, 4)) # [9, 286, 5955146588160]
