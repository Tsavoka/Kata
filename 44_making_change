# Complete the method that will determine the minimum number
# of coins needed to make change for a given amount in American
# currency.
# Coins used will be half-dollars, quarters, dimes, nickels, and
# pennies, worth 50¢, 25¢, 10¢, 5¢ and 1¢, respectively. They'll
# be represented by the symbols H, Q, D, N and P (symbols in Ruby,
# strings in in other languages)
# The argument passed in will be an integer representing the value
# in cents. The return value should be a hash/dictionary/object with
# the symbols as keys, and the numbers of coins as values. Coins that
# are not used should not be included in the hash. If the argument
# passed in is 0, then the method should return an empty hash.

def make_change(amount):
    result = {}
    while amount > 0:
        if amount - 50 >= 0:
            h = amount // 50
            amount = amount - 50*h
            result['H'] = h
        elif amount - 25 >= 0:
            q = amount // 25
            amount = amount - 25*q
            result['Q'] = q
        elif amount - 10 >= 0:
            d = amount // 10
            amount = amount - 10*d
            result['D'] = d
        elif amount - 5 >= 0:
            n = amount // 5
            amount = amount - 5*n
            result['N'] = n
        else:
            result['P'] = amount
            break
    return result




print(make_change(0))   # {}
print(make_change(1))   # {"P": 1}
print(make_change(43))  # {"Q": 1, "D": 1, "N": 1, "P": 3}
print(make_change(91))  # {"H": 1, "Q": 1, "D": 1, "N": 1, "P": 1}
