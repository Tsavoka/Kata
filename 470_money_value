# If you're faced with an input box, like this:
# 
#                                            +--------------+
#   Enter the price of the item, in dollars: |              |
#                                            +--------------+
# do you put the $ sign in, or not? Inevitably, some people will type a $
# sign and others will leave it out. The instructions could be made clearer
# - but that won't help those annoying people who never read instructions
# anyway.
# A better solution is to write code that can handle the input whether it
# includes a $ sign or not.
# So, we need a simple function that converts a string representing a number
# (possibly with a $ sign in front of it) into the number itself.
# Remember to consider negative numbers (the - sign may come either before
# or after the $ sign, if there is one), and any extraneous space characters
# (leading, trailing, or around the $ sign) that the users might put in. You
# do not need to handle trailing characters other than spaces (e.g. "1.2 3").
# If the given string does not represent a number, (either with or without a
# $ sign), return 0.0 .

def money_value(s):
    s = s.replace('$', '').replace(' ', '')
    return 0.0 if not s or s=='-' else float(s)




print(money_value("12.34"))     # 12.34
print(money_value(" $5.67"))    # 5.67
print(money_value("-0.89"))     # -0.89
print(money_value("-$ 0.1"))    # -0.10
print(money_value("$-2.3456"))  # -2.3456
print(money_value("007"))       # 7.00
print(money_value(" $ 89"))     # 89.0
print(money_value("   .11"))    # 0.11
print(money_value("$.2"))       # 0.20
print(money_value("-.34"))      # -0.34
print(money_value("$$$"))       # 0.0
