# The goal of this kata is two-fold:
# 1.) You must produce a fibonacci sequence in the form of
# an array, containing a number of items equal to the
# input provided.
# 2.) You must replace all numbers in the sequence divisible
# by 3 with Fizz, those divisible by 5 with Buzz, and those
# divisible by both 3 and 5 with FizzBuzz.
# For the sake of this kata, you can assume all input will be
# a positive integer.
# Use Cases
# Return output must be in the form of an array, with the
# numbers as integers and the replaced numbers (fizzbuzz) as
# strings.
# Examples
# Input:
# fibs_fizz_buzz(5)
# Output:
# [ 1, 1, 2, 'Fizz', 'Buzz' ]
# Input:
# fibs_fizz_buzz(1)
# Output:
# [1]
# Input:
# fibs_fizz_buzz(20)
# Output:
# [1,1,2,"Fizz","Buzz",8,13,"Fizz",34,"Buzz",89,"Fizz",233,377,
# "Buzz","Fizz",1597,2584,4181,"FizzBuzz"]


def fibs_fizz_buzz(n):
    fib1 = fib2 = 1
    rez = [1]
    counter = 0
    while counter <= n - 2:
        rez.append(fib2)
        fib1, fib2 = fib2, fib1 + fib2
        counter += 1
    return ['Fizz'*(not i%3) + 'Buzz'*(not i%5) or i for i in rez]




print(fibs_fizz_buzz(2))
# [1, 1]
print(fibs_fizz_buzz(5))
# [1, 1, 2, 'Fizz', 'Buzz']
print(fibs_fizz_buzz(7))
# [1, 1, 2, 'Fizz', 'Buzz', 8, 13]
print(fibs_fizz_buzz(10))
# [1, 1, 2, 'Fizz', 'Buzz', 8, 13, 'Fizz', 34, 'Buzz']
print(fibs_fizz_buzz(15))
# [1, 1, 2, 'Fizz', 'Buzz', 8, 13, 'Fizz', 34, 'Buzz', 89, 'Fizz',
# 233, 377, 'Buzz']
print(fibs_fizz_buzz(20))
# [1,1,2,"Fizz","Buzz",8,13,"Fizz",34,"Buzz",89,"Fizz",233,377,
# "Buzz","Fizz",1597,2584,4181,"FizzBuzz"]
print(fibs_fizz_buzz(1))
# [1]
print(fibs_fizz_buzz(40))
# [1,1,2,"Fizz","Buzz",8,13,"Fizz",34,"Buzz",89,"Fizz",233,377,
# "Buzz","Fizz",1597,2584,4181,"FizzBuzz",10946,17711,28657,"Fizz",
# "Buzz",121393,196418,"Fizz",514229,"Buzz",1346269,"Fizz",3524578,
# 5702887,"Buzz","Fizz",24157817,39088169,63245986,"FizzBuzz"]
